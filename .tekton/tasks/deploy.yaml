---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: image-deploy
  name: deploy
  namespace: build
spec:
  description: >-
    Deploy the newly built image via ArgoCD + Kustomize
  params:
    - description: URL for where the image will be hosted
      name: image_url
      type: string
    - description: Digest of teh newly built image
      name: image_digest
      type: string
    - description: Kustomization directory
      name: kustomization_directory
      type: string
    - description: ArgoCD git repo URL
      name: argocd_git_url
      type: string
  steps:
    - image: quay.io/ahussey/tekton-utils:latest
      name: modify-kustomization
      resources: {}
      script: |
        set -euxo pipefail
        cd $(workspaces.argocd_source.path)/$(params.kustomization_directory)
        cat ./kustomization.yaml
        export IMAGE_URL=$(params.image_url)
        export IMAGE_DIGEST=$(params.image_digest)

        yq e '(.images[] | select (.name == env(IMAGE_URL))) |= .digest = env(IMAGE_DIGEST)' -i ./kustomization.yaml
    - image: cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
      name: git-push
      resources: {}
      script: |
        set -euxo pipefail
        cd $(workspaces.argocd_source.path)

        ls -als
        
        git init
        git config --global --add safe.directory $(workspaces.argocd_source.path)
        git config --global user.name "TekTon"
        git config --global user.email "tekton@example.com"
        git checkout -b main
        git fetch --all
        git branch --set-upstream-to=origin/main main

        git add ./$(params.kustomization_directory)/kustomization.yaml
        git commit -m "Updated $(params.image_url):$(params.image_digest) for production"
        git push -u origin main -f

  workspaces:
    - name: argocd_source
      description: >-
        A workspace for the ArgoCD repository to clone into